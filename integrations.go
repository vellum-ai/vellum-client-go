// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/vellum-ai/vellum-client-go/core"
)

type ComponentsSchemasComposioExecuteToolRequest = *ComposioExecuteToolRequest

type ComponentsSchemasComposioExecuteToolResponse = *ComposioExecuteToolResponse

type ComponentsSchemasComposioToolDefinition = *ComposioToolDefinition

// Payload for executing a Composio tool with provider id and tool arguments.
type ComposioExecuteToolRequest struct {
	Arguments map[string]interface{} `json:"arguments" url:"arguments"`
	provider  string

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *ComposioExecuteToolRequest) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ComposioExecuteToolRequest) Provider() string {
	return c.provider
}

func (c *ComposioExecuteToolRequest) UnmarshalJSON(data []byte) error {
	type embed ComposioExecuteToolRequest
	var unmarshaler = struct {
		embed
		Provider string `json:"provider"`
	}{
		embed: embed(*c),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*c = ComposioExecuteToolRequest(unmarshaler.embed)
	if unmarshaler.Provider != "COMPOSIO" {
		return fmt.Errorf("unexpected value for literal on type %T; expected %v got %v", c, "COMPOSIO", unmarshaler.Provider)
	}
	c.provider = unmarshaler.Provider

	extraProperties, err := core.ExtractExtraProperties(data, *c, "provider")
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ComposioExecuteToolRequest) MarshalJSON() ([]byte, error) {
	type embed ComposioExecuteToolRequest
	var marshaler = struct {
		embed
		Provider string `json:"provider"`
	}{
		embed:    embed(*c),
		Provider: "COMPOSIO",
	}
	return json.Marshal(marshaler)
}

func (c *ComposioExecuteToolRequest) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

// Response payload with provider id and execution output from a Composio tool.
type ComposioExecuteToolResponse struct {
	Data     map[string]interface{} `json:"data" url:"data"`
	provider string

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *ComposioExecuteToolResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ComposioExecuteToolResponse) Provider() string {
	return c.provider
}

func (c *ComposioExecuteToolResponse) UnmarshalJSON(data []byte) error {
	type embed ComposioExecuteToolResponse
	var unmarshaler = struct {
		embed
		Provider string `json:"provider"`
	}{
		embed: embed(*c),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*c = ComposioExecuteToolResponse(unmarshaler.embed)
	if unmarshaler.Provider != "COMPOSIO" {
		return fmt.Errorf("unexpected value for literal on type %T; expected %v got %v", c, "COMPOSIO", unmarshaler.Provider)
	}
	c.provider = unmarshaler.Provider

	extraProperties, err := core.ExtractExtraProperties(data, *c, "provider")
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ComposioExecuteToolResponse) MarshalJSON() ([]byte, error) {
	type embed ComposioExecuteToolResponse
	var marshaler = struct {
		embed
		Provider string `json:"provider"`
	}{
		embed:    embed(*c),
		Provider: "COMPOSIO",
	}
	return json.Marshal(marshaler)
}

func (c *ComposioExecuteToolResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

// Serializer for Composio tool definition response.
type ComposioToolDefinition struct {
	Name        string                 `json:"name" url:"name"`
	Description string                 `json:"description" url:"description"`
	Parameters  map[string]interface{} `json:"parameters" url:"parameters"`
	provider    string

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *ComposioToolDefinition) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ComposioToolDefinition) Provider() string {
	return c.provider
}

func (c *ComposioToolDefinition) UnmarshalJSON(data []byte) error {
	type embed ComposioToolDefinition
	var unmarshaler = struct {
		embed
		Provider string `json:"provider"`
	}{
		embed: embed(*c),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*c = ComposioToolDefinition(unmarshaler.embed)
	if unmarshaler.Provider != "COMPOSIO" {
		return fmt.Errorf("unexpected value for literal on type %T; expected %v got %v", c, "COMPOSIO", unmarshaler.Provider)
	}
	c.provider = unmarshaler.Provider

	extraProperties, err := core.ExtractExtraProperties(data, *c, "provider")
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ComposioToolDefinition) MarshalJSON() ([]byte, error) {
	type embed ComposioToolDefinition
	var marshaler = struct {
		embed
		Provider string `json:"provider"`
	}{
		embed:    embed(*c),
		Provider: "COMPOSIO",
	}
	return json.Marshal(marshaler)
}

func (c *ComposioToolDefinition) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
