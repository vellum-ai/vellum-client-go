// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/vellum-ai/vellum-client-go/core"
	time "time"
)

// An ML Model that your Workspace has access to.
type MlModelRead struct {
	Id string `json:"id" url:"id"`
	// The unique name of the ML Model.
	Name         string    `json:"name" url:"name"`
	IntroducedOn time.Time `json:"introduced_on" url:"introduced_on"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (m *MlModelRead) GetExtraProperties() map[string]interface{} {
	return m.extraProperties
}

func (m *MlModelRead) UnmarshalJSON(data []byte) error {
	type embed MlModelRead
	var unmarshaler = struct {
		embed
		IntroducedOn *core.DateTime `json:"introduced_on"`
	}{
		embed: embed(*m),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*m = MlModelRead(unmarshaler.embed)
	m.IntroducedOn = unmarshaler.IntroducedOn.Time()

	extraProperties, err := core.ExtractExtraProperties(data, *m)
	if err != nil {
		return err
	}
	m.extraProperties = extraProperties

	m._rawJSON = json.RawMessage(data)
	return nil
}

func (m *MlModelRead) MarshalJSON() ([]byte, error) {
	type embed MlModelRead
	var marshaler = struct {
		embed
		IntroducedOn *core.DateTime `json:"introduced_on"`
	}{
		embed:        embed(*m),
		IntroducedOn: core.NewDateTime(m.IntroducedOn),
	}
	return json.Marshal(marshaler)
}

func (m *MlModelRead) String() string {
	if len(m._rawJSON) > 0 {
		if value, err := core.StringifyJSON(m._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(m); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", m)
}
