// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/vellum-ai/vellum-client-go/core"
	time "time"
)

type WorkspaceRead struct {
	Id *string `json:"id,omitempty" url:"id,omitempty"`
	// The name of the Workspace.
	Name    string     `json:"name" url:"name"`
	Label   *string    `json:"label,omitempty" url:"label,omitempty"`
	Created *time.Time `json:"created,omitempty" url:"created,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (w *WorkspaceRead) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WorkspaceRead) UnmarshalJSON(data []byte) error {
	type embed WorkspaceRead
	var unmarshaler = struct {
		embed
		Created *core.DateTime `json:"created,omitempty"`
	}{
		embed: embed(*w),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*w = WorkspaceRead(unmarshaler.embed)
	w.Created = unmarshaler.Created.TimePtr()

	extraProperties, err := core.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties

	w._rawJSON = json.RawMessage(data)
	return nil
}

func (w *WorkspaceRead) MarshalJSON() ([]byte, error) {
	type embed WorkspaceRead
	var marshaler = struct {
		embed
		Created *core.DateTime `json:"created,omitempty"`
	}{
		embed:   embed(*w),
		Created: core.NewOptionalDateTime(w.Created),
	}
	return json.Marshal(marshaler)
}

func (w *WorkspaceRead) String() string {
	if len(w._rawJSON) > 0 {
		if value, err := core.StringifyJSON(w._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}
