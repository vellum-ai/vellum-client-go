imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    deploy_prompt:
      path: /v1/sandboxes/{id}/prompts/{prompt_variant_id}/deploy
      method: POST
      auth: true
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this sandbox.
        prompt_variant_id:
          type: string
          docs: An ID identifying the Prompt you'd like to deploy.
      request:
        name: DeploySandboxPromptRequest
        body:
          properties:
            prompt_deployment_id:
              type: optional<string>
              docs: >-
                The Vellum-generated ID of the Prompt Deployment you'd like to
                update. Cannot specify both this and prompt_deployment_name.
                Leave null to create a new Prompt Deployment.
              validation:
                format: uuid
            prompt_deployment_name:
              type: optional<string>
              docs: >-
                The unique name of the Prompt Deployment you'd like to either
                create or update. Cannot specify both this and
                prompt_deployment_id. If provided and matches an existing Prompt
                Deployment, that Prompt Deployment will be updated. Otherwise, a
                new Prompt Deployment will be created.
              validation:
                minLength: 1
            label:
              type: optional<string>
              docs: >-
                In the event that a new Prompt Deployment is created, this will
                be the label it's given.
              validation:
                minLength: 1
            release_tags:
              type: optional<list<string>>
              docs: >-
                Optionally provide the release tags that you'd like to be
                associated with the latest release of the created/updated Prompt
                Deployment.
      response:
        docs: ''
        type: root.DeploymentRead
      url: Default
      availability: pre-release
      examples:
        - path-parameters:
            id: id
            prompt_variant_id: prompt_variant_id
          request: {}
          response:
            body:
              id: id
              created: '2024-01-15T09:30:00Z'
              label: label
              name: name
              status: ACTIVE
              environment: DEVELOPMENT
              last_deployed_on: '2024-01-15T09:30:00Z'
              input_variables:
                - id: id
                  key: key
                  type: STRING
              description: description
              active_model_version_ids:
                - active_model_version_ids
              last_deployed_history_item_id: last_deployed_history_item_id
      audiences:
        - customers
    upsert_sandbox_scenario:
      path: /v1/sandboxes/{id}/scenarios
      method: POST
      auth: true
      docs: >-
        Upserts a new scenario for a sandbox, keying off of the optionally
        provided scenario id.


        If an id is provided and has a match, the scenario will be updated. If
        no id is provided or no match

        is found, a new scenario will be appended to the end.


        Note that a full replacement of the scenario is performed, so any fields
        not provided will be removed

        or overwritten with default values.
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this sandbox.
      request:
        name: UpsertSandboxScenarioRequest
        body:
          properties:
            label:
              type: optional<string>
              default: Untitled Scenario
            inputs:
              docs: The inputs for the scenario
              type: list<root.NamedScenarioInputRequest>
            scenario_id:
              type: optional<string>
              docs: >-
                The id of the scenario to update. If none is provided, an id
                will be generated and a new scenario will be appended.
              validation:
                minLength: 1
      response:
        docs: ''
        type: root.SandboxScenario
      url: Default
      availability: pre-release
      examples:
        - name: Basic Example
          path-parameters:
            id: id
          request:
            label: Scenario 1
            inputs:
              - type: STRING
                value: Hello, world!
                name: var_1
              - type: STRING
                value: Why hello, there!
                name: var_2
          response:
            body:
              label: label
              inputs:
                - type: STRING
                  value: value
                  input_variable_id: input_variable_id
              id: id
        - name: Chat History Example
          path-parameters:
            id: id
          request:
            label: Scenario 2
            inputs:
              - type: CHAT_HISTORY
                value:
                  - text: What's your favorite color?
                    role: USER
                  - text: AI's don't have a favorite color.... Yet.
                    role: ASSISTANT
                name: chat_history
          response:
            body:
              label: label
              inputs:
                - type: STRING
                  value: value
                  input_variable_id: input_variable_id
              id: id
      audiences:
        - customers
    delete_sandbox_scenario:
      path: /v1/sandboxes/{id}/scenarios/{scenario_id}
      method: DELETE
      auth: true
      docs: >-
        Deletes an existing scenario from a sandbox, keying off of the provided
        scenario id.
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this sandbox.
        scenario_id:
          type: string
          docs: An id identifying the scenario that you'd like to delete
      url: Default
      availability: pre-release
      examples:
        - path-parameters:
            id: id
            scenario_id: scenario_id
      audiences:
        - customers
  source:
    openapi: openapi/openapi.yml
