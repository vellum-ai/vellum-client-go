// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/vellum-ai/vellum-client-go/core"
)

type PromptsPullRequest struct {
	// Set to 'application/yaml' to receive YAML response, otherwise JSON will be returned
	// The ID of the Prompt Variant within a Prompt Sandbox to pull. Must be included if providing the ID of a Prompt Sandbox.
	PromptVariantId *string `json:"-" url:"prompt_variant_id,omitempty"`
	accept          string
}

func (p *PromptsPullRequest) Accept() string {
	return p.accept
}

type PromptPush struct {
	// If specified, an existing Prompt Variant by the provided ID will be updated. Otherwise, a new Prompt Variant will be created and an ID generated.
	PromptVariantId *string `json:"prompt_variant_id,omitempty" url:"-"`
	// If provided, then the created/updated Prompt Variant will have this label.
	PromptVariantLabel *string           `json:"prompt_variant_label,omitempty" url:"-"`
	PromptSandboxId    *string           `json:"prompt_sandbox_id,omitempty" url:"-"`
	ExecConfig         *PromptExecConfig `json:"exec_config,omitempty" url:"-"`
}

type PromptExecConfig struct {
	MlModel        string                `json:"ml_model" url:"ml_model"`
	InputVariables []*VellumVariable     `json:"input_variables" url:"input_variables"`
	Parameters     *PromptParameters     `json:"parameters" url:"parameters"`
	Settings       *PromptSettings       `json:"settings,omitempty" url:"settings,omitempty"`
	Blocks         []*PromptBlock        `json:"blocks" url:"blocks"`
	Functions      []*FunctionDefinition `json:"functions,omitempty" url:"functions,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (p *PromptExecConfig) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PromptExecConfig) UnmarshalJSON(data []byte) error {
	type unmarshaler PromptExecConfig
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PromptExecConfig(value)

	extraProperties, err := core.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties

	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PromptExecConfig) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}

type PromptPushResponse struct {
	PromptVariantId string `json:"prompt_variant_id" url:"prompt_variant_id"`
	PromptSandboxId string `json:"prompt_sandbox_id" url:"prompt_sandbox_id"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (p *PromptPushResponse) GetExtraProperties() map[string]interface{} {
	return p.extraProperties
}

func (p *PromptPushResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler PromptPushResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*p = PromptPushResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *p)
	if err != nil {
		return err
	}
	p.extraProperties = extraProperties

	p._rawJSON = json.RawMessage(data)
	return nil
}

func (p *PromptPushResponse) String() string {
	if len(p._rawJSON) > 0 {
		if value, err := core.StringifyJSON(p._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(p); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", p)
}
