// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/vellum-ai/vellum-client-go/core"
	time "time"
)

type WorkflowDeploymentRelease struct {
	Id              *string                                      `json:"id,omitempty" url:"id,omitempty"`
	Created         *time.Time                                   `json:"created,omitempty" url:"created,omitempty"`
	Environment     *ReleaseEnvironment                          `json:"environment" url:"environment"`
	CreatedBy       *ReleaseCreatedBy                            `json:"created_by,omitempty" url:"created_by,omitempty"`
	WorkflowVersion *WorkflowDeploymentReleaseWorkflowVersion    `json:"workflow_version" url:"workflow_version"`
	Deployment      *WorkflowDeploymentReleaseWorkflowDeployment `json:"deployment" url:"deployment"`
	Description     *string                                      `json:"description,omitempty" url:"description,omitempty"`
	ReleaseTags     []*ReleaseReleaseTag                         `json:"release_tags" url:"release_tags"`
	Reviews         []*SlimReleaseReview                         `json:"reviews" url:"reviews"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (w *WorkflowDeploymentRelease) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WorkflowDeploymentRelease) UnmarshalJSON(data []byte) error {
	type embed WorkflowDeploymentRelease
	var unmarshaler = struct {
		embed
		Created *core.DateTime `json:"created,omitempty"`
	}{
		embed: embed(*w),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*w = WorkflowDeploymentRelease(unmarshaler.embed)
	w.Created = unmarshaler.Created.TimePtr()

	extraProperties, err := core.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties

	w._rawJSON = json.RawMessage(data)
	return nil
}

func (w *WorkflowDeploymentRelease) MarshalJSON() ([]byte, error) {
	type embed WorkflowDeploymentRelease
	var marshaler = struct {
		embed
		Created *core.DateTime `json:"created,omitempty"`
	}{
		embed:   embed(*w),
		Created: core.NewOptionalDateTime(w.Created),
	}
	return json.Marshal(marshaler)
}

func (w *WorkflowDeploymentRelease) String() string {
	if len(w._rawJSON) > 0 {
		if value, err := core.StringifyJSON(w._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}

type WorkflowDeploymentReleaseWorkflowDeployment struct {
	Name *string `json:"name,omitempty" url:"name,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (w *WorkflowDeploymentReleaseWorkflowDeployment) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WorkflowDeploymentReleaseWorkflowDeployment) UnmarshalJSON(data []byte) error {
	type unmarshaler WorkflowDeploymentReleaseWorkflowDeployment
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*w = WorkflowDeploymentReleaseWorkflowDeployment(value)

	extraProperties, err := core.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties

	w._rawJSON = json.RawMessage(data)
	return nil
}

func (w *WorkflowDeploymentReleaseWorkflowDeployment) String() string {
	if len(w._rawJSON) > 0 {
		if value, err := core.StringifyJSON(w._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}

type WorkflowDeploymentReleaseWorkflowVersion struct {
	Id              *string           `json:"id,omitempty" url:"id,omitempty"`
	InputVariables  []*VellumVariable `json:"input_variables,omitempty" url:"input_variables,omitempty"`
	OutputVariables []*VellumVariable `json:"output_variables,omitempty" url:"output_variables,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (w *WorkflowDeploymentReleaseWorkflowVersion) GetExtraProperties() map[string]interface{} {
	return w.extraProperties
}

func (w *WorkflowDeploymentReleaseWorkflowVersion) UnmarshalJSON(data []byte) error {
	type unmarshaler WorkflowDeploymentReleaseWorkflowVersion
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*w = WorkflowDeploymentReleaseWorkflowVersion(value)

	extraProperties, err := core.ExtractExtraProperties(data, *w)
	if err != nil {
		return err
	}
	w.extraProperties = extraProperties

	w._rawJSON = json.RawMessage(data)
	return nil
}

func (w *WorkflowDeploymentReleaseWorkflowVersion) String() string {
	if len(w._rawJSON) > 0 {
		if value, err := core.StringifyJSON(w._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(w); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", w)
}
